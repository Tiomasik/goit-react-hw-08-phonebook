{"version":3,"file":"static/js/285.cb1a5f55.chunk.js","mappings":"oLAGMA,EAAgB,CACpBC,KAAM,GAAIC,KAAM,GAAIC,SAAU,IAG1BC,EAASC,EAAAA,KAAaC,MAAM,CAC9BL,KAAMI,EAAAA,KAAaE,QAAQ,4HAAgEC,WAC3FN,KAAMG,EAAAA,KAAaI,QACnBN,SAAUE,EAAAA,KAAaK,IAAI,GAAGC,IAAI,MAGhCC,EAAgB,SAAC,GAAc,IAAZX,EAAW,EAAXA,KACvB,OACE,SAAC,KAAD,CAAcA,KAAMA,EAAMY,UAAU,MAClCC,OAAQ,kBAAM,mKAAN,GAEb,EAEKC,EAAgB,SAAC,GAAc,IAAZd,EAAW,EAAXA,KACvB,OACE,SAAC,KAAD,CAAcA,KAAMA,EAAMY,UAAU,MAClCC,OAAQ,kBAAM,+CAAN,GAEb,EAEKE,EAAoB,SAAC,GAAc,IAAZf,EAAW,EAAXA,KAC3B,OACE,SAAC,KAAD,CAAcA,KAAMA,EAAMY,UAAU,MAClCC,OAAQ,kBAAM,iEAAN,GAEb,EAuCD,UArCiB,WAUT,OACI,6BACI,gDACA,SAAC,KAAD,CAAQd,cAAeA,EAAeiB,SAX9B,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UAExBC,EAAe,CAAEnB,KADUiB,EAAzBjB,KACqBC,KADIgB,EAAnBhB,KACqBC,SADFe,EAAbf,UAGpBkB,QAAQC,IAAIF,GACZD,GACD,EAK0EI,iBAAkBnB,EAA/E,UACI,UAAC,KAAD,YACA,SAAC,KAAD,CACIH,KAAK,OACLuB,YAAY,eAEhB,SAACZ,EAAD,CAAeX,KAAK,UACpB,SAAC,KAAD,CACIA,KAAK,OACLuB,YAAY,UAEZ,SAACT,EAAD,CAAed,KAAK,UACxB,SAAC,KAAD,CACIA,KAAK,WACLuB,YAAY,cAEZ,SAACR,EAAD,CAAmBf,KAAK,cACxB,mBAAQwB,KAAK,SAAb,6BAKnB,C","sources":["pages/Register.jsx"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nconst initialValues = {\n  name: '', mail: '', password: ''\n}\n\nconst schema = yup.object().shape({\n    name: yup.string().matches(/(^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$)/).required(),\n    mail: yup.string().email(),\n    password: yup.string().min(5).max(10),\n});\n\nconst FormErrorName = ({ name }) => {\n  return (\n    <ErrorMessage name={name} component='div'\n      render={() => <div>Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan</div>} />\n  )\n}\n\nconst FormErrorMail = ({ name }) => {\n  return (\n    <ErrorMessage name={name} component='div'\n      render={() => <div>Mail must be valid</div>} />\n  )\n}\n\nconst FormErrorPassword = ({ name }) => {\n  return (\n    <ErrorMessage name={name} component='div'\n      render={() => <div>Length password must be 5-10 symbols</div>} />\n  )\n}\n\nconst Register = () => {\n\n    const handlSubmit = (value, { resetForm }) => {\n    const { name, mail, password } = value\n    const arrayContact = { name, mail, password }\n    \n    console.log(arrayContact)\n    resetForm()  \n  }\n\n        return (\n            <main>\n                <h2>I am Register-page</h2>\n                <Formik initialValues={initialValues} onSubmit={handlSubmit} validationSchema={schema}>\n                    <Form>\n                    <Field  \n                        name=\"name\"\n                        placeholder=\"User name\"\n                    />\n                    <FormErrorName name=\"name\"/>\n                    <Field\n                        name=\"mail\"\n                        placeholder=\"Mail\"\n                    />\n                        <FormErrorMail name=\"mail\" />\n                    <Field\n                        name=\"password\"\n                        placeholder=\"Password\"\n                    />\n                        <FormErrorPassword name=\"password\" />\n                        <button type='submit'>Register</button>\n                    </Form>\n                </Formik>\n            </main>\n        )\n    };\n\nexport default Register;"],"names":["initialValues","name","mail","password","schema","yup","shape","matches","required","email","min","max","FormErrorName","component","render","FormErrorMail","FormErrorPassword","onSubmit","value","resetForm","arrayContact","console","log","validationSchema","placeholder","type"],"sourceRoot":""}