{"version":3,"file":"static/js/310.aec7b297.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/ContactItem/ContactItem.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const gettIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const getError = state => state.contacts.contacts.error;","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const StyleForm = styled(Form) `\n    width:100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-radius: 10px;\n    padding: 20px 0;\n    background-color: #f0f0f7;\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.7), 0 0 30px rgba(0, 0, 0, 0.3) inset;\n\n    @media screen and (min-width: 480px) {\n        width: 440px;\n    }\n    input{\n        width: 80%;\n        padding: 3px;\n        margin-bottom:20px;\n        font-size: 20px;\n        border-radius: 5px;\n        border: 2px solid #716e6e;\n    }\n\n    button{\n        width: 100px;\n        padding: 5px 0;\n        cursor: pointer;\n        border: 2px solid #716e6e;\n        background-color: transparent;\n        border-radius: 5px;\n\n        :hover, :focus {\n            background-color: #716e6e;\n            color: white;\n        }\n    }\n\n    div {\n        color: red;\n        margin-bottom: 20px;\n        width: 360px;\n        text-align: center;\n    }\n`\n        \n     ","import { Formik, Field, ErrorMessage  } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from 'react-toastify';\n\nimport { getContacts } from \"redux/contacts/selectors\";\nimport { StyleForm } from './Form.styled'\nimport { addContact } from \"redux/contacts/operations\";\n\nconst initialValues = {\n  name: '', number: ''\n}\n\nconst schema = yup.object().shape({\n  name: yup.string().matches(/(^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$)/).required(),\n  number: yup.number().required().integer(),\n});\n\nconst FormErrorName = ({ name }) => {\n  return (\n    <ErrorMessage name={name} component='div'\n      render={() => <div>Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan</div>} />\n  )\n}\n\nconst FormErrorNumber = ({ name }) => {\n  return (\n    <ErrorMessage name={name} component='div'\n      render={() => <div>Phone number must be digits and can contain spaces, dashes, parentheses and can start with +</div>} />\n  )\n}\n\nconst FormSubmit = () => {\n  const contacts = useSelector(getContacts)\n  const dispatch = useDispatch();\n  const handlSubmit = (value, { resetForm }) => {\n    const { name, number } = value\n    const arrayContact = { name, number }\n\n    if (!(contacts.filter(contact => contact.name.toLowerCase() === arrayContact.name.trim().toLowerCase())).length) {\n      resetForm()\n      return dispatch(addContact(arrayContact))\n    } else toast.error(`${arrayContact.name} is already in contacts`)\n    resetForm()  \n  }\n\n  return (\n    <>      \n      <Formik initialValues={initialValues} onSubmit={handlSubmit} validationSchema={schema}>\n        <StyleForm>\n          <Field  \n            name=\"name\"\n            placeholder=\"Name\"\n          />\n          <FormErrorName name=\"name\"/>\n          \n          <Field\n            name=\"number\"\n            placeholder=\"Phone number\"\n          />\n          <FormErrorNumber name=\"number\"/>\n          <button type='submit'>Add Contact</button>\n        </StyleForm>\n      </Formik>\n    </>    \n  );\n}\n\nexport default FormSubmit;","import styled from 'styled-components';\nimport { BsFillEmojiSmileFill, BsFillTelephoneFill } from \"react-icons/bs\";\nimport { ImPencil2, ImCross } from \"react-icons/im\";\n\nexport const Item = styled.p `\n    display: flex;\n    align-items: center;\n    gap: 10px;\n\n    span {\n        font-size: 16px;\n        font-weight:700;\n    }\n    \n`\nexport const IconSmile = styled(BsFillEmojiSmileFill) `\n    color: tomato;\n`\n\nexport const IconPhone = styled(BsFillTelephoneFill) `\n    color: tomato;\n`\n\nexport const Button = styled.div `\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap:10px;\n\n    @media screen and (min-width: 480px) {\n        flex-direction: row;\n        gap:10px;\n    }\n\n    button {\n        display: flex;\n        align-items: center;\n        gap: 5px;\n    }\n`\n\nexport const IconChange = styled(ImPencil2) `\n    color: green;\n`\n\nexport const IconDelete = styled(ImCross) `\n    color: red;\n`","import styled from 'styled-components';\n\nexport const Overlay = styled.div `\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.8);\n    z-index: 1200;\n`\n\nexport const ModalForm = styled.div `\n    width: 400px;\n    height: 200px;\n    background-color: #ffffff;\n    border-radius: 10px;\n`\n\nexport const Form = styled.form `\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-radius: 10px;\n    padding: 20px 0;\n    background-color: #f0f0f7;\n\n    input{\n        width: 300px;\n        padding: 3px;\n        margin-bottom:20px;\n        font-size: 20px;\n        border-radius: 5px;\n        border: 2px solid #716e6e;\n    }\n\n    div {\n        display: flex;\n        align-items: center;\n        gap: 30px;\n    }\n`","import { useState, useEffect } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nimport { changeContact } from 'redux/contacts/operations';\nimport { Overlay, ModalForm, Form } from './Modal.styled';\n\n\nconst Modal = ({ onClose, id, contact, contactsWihoutChange }) => {\n    const [name, setName] = useState(contact.name);\n    const [number, setNumber] = useState(contact.number);\n    const dispatch = useDispatch();\n    \n    const handlChangeName = (evt) => {\n    const { value } = evt.currentTarget\n    setName(value)\n    }\n    \n    const handlChangeNumber = (evt) => {\n    const { value } = evt.currentTarget\n    setNumber(value)\n    }\n    \n    const handlSubmit = (value) => {  \n        value.preventDefault()\n        const arrayContact = { id, name: value.target[0].value, number: value.target[1].value }\n        \n        if (!(contactsWihoutChange.filter(contact => contact.name.toLowerCase() === arrayContact.name.trim().toLowerCase())).length) {\n            onClose()\n        return dispatch(changeContact(arrayContact))\n        } else toast.error(`${arrayContact.name} is already in contacts`)   \n    }\n    \n    useEffect(() => {\n        const handleKeyDown = evt => {\n        if (evt.code === 'Escape') {\n            onClose()\n        }\n    }\n        document.addEventListener(\"keydown\", handleKeyDown);\n        return () => {\n            document.removeEventListener(\"keydown\", handleKeyDown);\n        };\n    }, [onClose]);\n\n    const handlOverlayClick = (evt) => {\n        if (evt.target === evt.currentTarget) {\n            onClose()\n        }\n    }\n\n    return (\n        <Overlay className=\"Overlay\" onClick={handlOverlayClick}>\n            <ModalForm className=\"Modal\">\n                <Form onSubmit={handlSubmit}>\n                    <input\n                    type=\"text\"\n                    value={name}\n                    onChange={handlChangeName}\n                    autoComplete=\"off\"\n                    autoFocus\n                            />\n                    <input\n                    type=\"text\"\n                    value={number}\n                    onChange={handlChangeNumber}\n                    autoComplete=\"off\"\n                    autoFocus\n                    />\n                    <div>\n                        <button type=\"submit\">Change</button>\n                        <button type=\"button\" onClick={onClose}>Cancel</button>\n                    </div>\n                </Form>\n            </ModalForm>\n        </Overlay>\n    )\n}\n\nModal.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    contact: PropTypes.object.isRequired,\n    contactsWihoutChange: PropTypes.array.isRequired,\n    id: PropTypes.string.isRequired,\n}\n\nexport default Modal;","import PropTypes from 'prop-types';\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\"\nimport { useSelector } from 'react-redux';\n\nimport { deleteContact } from \"redux/contacts/operations\";\nimport { Item, IconSmile, IconPhone, Button, IconChange, IconDelete } from \"./ContactItem.styled\";\nimport Modal from '../Modal/Modal'\nimport { getContacts } from 'redux/contacts/selectors';\n\nconst ContactItem = ({ name, number, id }) => {\n    const dispatch = useDispatch();\n\n    const [openModal, setOpenModal] = useState('');\n    const [contact, setContact] = useState({});\n    const [contactsWihoutChange, setContactsWihoutChange] = useState({});\n    const contacts = useSelector(getContacts);\n\n    const onOpen = () => {\n        setContact(contacts.find(contact => contact.id === id))\n        setContactsWihoutChange(contacts.filter(contact => contact.id !== id))\n        setOpenModal(true)\n    }\n\n    const onClose = () => {\n        setOpenModal(false)\n    }\n\n    return (\n        <>\n            <div>\n                <Item><IconSmile /><span>{name}</span></Item>\n                <Item><IconPhone/><span>{number}</span></Item>\n            </div>\n            <Button>\n                <button type=\"button\" onClick={onOpen}><IconChange/><span>Change</span></button>\n                <button type=\"button\" onClick={() => dispatch(deleteContact(id))}><IconDelete/><span>Delete</span></button>\n            </Button>\n            {openModal && <Modal id={id} onClose={onClose} contact={contact} contactsWihoutChange={ contactsWihoutChange } />}\n        </>)\n}\n\nContactItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n}\n\nexport default ContactItem","import styled from 'styled-components';\n\nexport const List = styled.ul `\n    width: 100%;\n    display:flex;\n    flex-direction:column;\n    gap:10px;\n\n    @media screen and (min-width: 768px) {\n        width: 728px;\n    }\n`\n\nexport const Item = styled.li `\n    width: 100%;\n    padding:10px 16px;\n    background-color: #f0f0f7;\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.7), 0 0 30px rgba(0, 0, 0, 0.3) inset;\n    border-radius: 5px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    \n    button{\n        padding: 5px;\n        border: 1px solid tomato;\n        background-color: transparent;\n        border-radius: 5px;\n        cursor: pointer;\n\n        :hover, :focus {\n            background-color: tomato;\n            color: white;\n        }\n    }\n\n    p {\n        font-weight: 500;\n    }\n`\nexport const Info = styled.p `\n    justify-content: center;\n    color: tomato;\n    font-size: 20px;\n    font-weight: 400;\n    display: flex;\n    gap: 5px;\n    \n`\n\nexport const Filter = styled.span `\n    font-weight: 700;\n`","import { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport { getContacts, getFilter } from \"redux/contacts/selectors\";\nimport ContactItem from '../ContactItem/ContactItem'\nimport { List, Item, Info, Filter } from './ContactList.styled'\nimport { fetchAll } from \"redux/contacts/operations\";\n\nexport const ContactList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts)\n    const filter = useSelector(getFilter)\n\n    useEffect(() => {\n        dispatch(fetchAll());\n    }, [dispatch]);\n    \n    const getVisibleContacts = () => {\n        return contacts.filter(contact => contact.name.toLowerCase().includes(filter.trim().toLowerCase()))\n    }\n        \n    return (\n        <>\n            {contacts.length ===0 && <Info>Sorry, but you don't have any contacts</Info>}\n            {getVisibleContacts().length === 0 && contacts.length !== 0\n                && <Info><span>Sorry, but you don't have contact</span> \n                <Filter>{filter}</Filter></Info>}\n            < List >\n            {getVisibleContacts().map(({ id, name, number }) =>\n                <Item key={id}>\n                    <ContactItem name={name}\n                        number={number}\n                        id={id} />\n                </Item>)}\n            </List >\n        </>\n    )\n}\n\nexport default ContactList","import styled from 'styled-components';\n\nexport const StyleName = styled.label `\n    display: block;\n    text-align: center;\n    font-weight: 500;\n    \n`\nexport const StyleInput = styled.input `\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    width: 200px;\n    padding: 3px;\n    border-radius: 5px;\n    border: 2px solid #716e6e;\n`\n\nexport const Title = styled.h3 `\n    text-align: center;\n    font-size: 26px;\n    font-weight: 700;\n    margin:0;\n    \n`\n","import { useDispatch, useSelector } from \"react-redux\";\n\nimport { filterContacts } from \"redux/contacts/contactsSlice\";\nimport { getContacts } from \"redux/contacts/selectors\";\nimport { StyleInput } from './Filter.styled'\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts)\n\n    const changeFilter = (evt) => {\n        dispatch(filterContacts(evt.currentTarget.value))\n    }\nreturn (\n    <>\n        {contacts.length !== 0 && <div>\n            <StyleInput type=\"text\"\n                placeholder=\"Find contacts by names\"\n                    onChange={changeFilter}/>\n        </div >}\n    </>\n    )\n}\n\nexport default Filter","import styled from 'styled-components';\n\nexport const ContactsWraper = styled.main `\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    background-color: #f0f0f7;\n`\n\nexport const FormImg = styled.img `\n    width: 320px;\n`","import { useSelector } from \"react-redux\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { gettIsLoading, getError } from \"redux/contacts/selectors\";\nimport Form from '../../components/Form/Form';\nimport { ContactList } from '../../components/ContactList/ContactList'\nimport Filter from '../../components/Filter/Filter'\nimport { ContactsWraper, FormImg } from './Contacts.styled'\nimport Loader from '../../components/Loader/Loader'\nimport  contactUser  from  '../../image/contactUser.png'\n\n\n  \nconst Contacts = () => {\n  const isLoading = useSelector(gettIsLoading);\n  const error = useSelector(getError);\n\n  return (\n    <ContactsWraper>\n      <FormImg src={contactUser} alt=\"\" />\n      <Form />\n      <Filter />\n      <ContactList />\n      {isLoading && !error && <Loader />}\n      <ToastContainer autoClose={3000} />\n    </ContactsWraper>\n  )\n};\n\nexport default Contacts;"],"names":["getContacts","state","contacts","items","getFilter","filter","gettIsLoading","isLoading","getError","error","StyleForm","styled","Form","initialValues","name","number","schema","yup","shape","matches","required","integer","FormErrorName","component","render","FormErrorNumber","useSelector","dispatch","useDispatch","onSubmit","value","resetForm","arrayContact","contact","toLowerCase","trim","length","addContact","toast","validationSchema","placeholder","type","Item","IconSmile","BsFillEmojiSmileFill","IconPhone","BsFillTelephoneFill","Button","IconChange","ImPencil2","IconDelete","ImCross","Overlay","ModalForm","onClose","id","contactsWihoutChange","useState","setName","setNumber","useEffect","handleKeyDown","evt","code","document","addEventListener","removeEventListener","className","onClick","target","currentTarget","preventDefault","changeContact","onChange","autoComplete","autoFocus","openModal","setOpenModal","setContact","setContactsWihoutChange","find","deleteContact","List","Info","Filter","ContactList","fetchAll","getVisibleContacts","includes","map","StyleInput","filterContacts","ContactsWraper","FormImg","src","contactUser","alt","Loader","autoClose"],"sourceRoot":""}