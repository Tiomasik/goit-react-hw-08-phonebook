{"version":3,"file":"static/js/956.19a115f1.chunk.js","mappings":"+PAIaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,gvB,SCGhBE,EAAgB,CACpBC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAG3BC,EAASC,EAAAA,KAAaC,MAAM,CAC9BL,KAAMI,EAAAA,KAAaE,QAAQ,4HAAgEC,WAC3FN,MAAOG,EAAAA,KAAaH,QACpBC,SAAUE,EAAAA,KAAaI,IAAI,GAAGC,IAAI,MAGhCC,EAAgB,SAAC,GAAc,IAAZV,EAAW,EAAXA,KACvB,OACE,SAAC,KAAD,CAAcA,KAAMA,EAAMW,UAAU,MAClCC,OAAQ,kBAAM,mKAAN,GAEb,EAEKC,EAAgB,SAAC,GAAc,IAAZb,EAAW,EAAXA,KACvB,OACE,SAAC,KAAD,CAAcA,KAAMA,EAAMW,UAAU,MAClCC,OAAQ,kBAAM,+CAAN,GAEb,EAEKE,EAAoB,SAAC,GAAc,IAAZd,EAAW,EAAXA,KAC3B,OACE,SAAC,KAAD,CAAcA,KAAMA,EAAMW,UAAU,MAClCC,OAAQ,kBAAM,iEAAN,GAEb,EA2CD,EAzCqB,WACnB,IAAMG,GAAWC,EAAAA,EAAAA,MAaX,OACI,+BACI,SAAC,KAAD,CAAQjB,cAAeA,EAAekB,SAbhC,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UAEtBC,EAAe,CAAEpB,KADWkB,EAA1BlB,KACqBC,MADKiB,EAApBjB,MACsBC,SADFgB,EAAbhB,UAGrBmB,QAAQC,IAAIF,GACZL,GACEQ,EAAAA,EAAAA,IAASH,IAEXD,GACD,EAI0EK,iBAAkBrB,EAA/E,UACI,UAACP,EAAD,YACA,SAAC,KAAD,CACII,KAAK,OACLyB,YAAY,eAEhB,SAACf,EAAD,CAAeV,KAAK,UACpB,SAAC,KAAD,CACIA,KAAK,QACLyB,YAAY,UAEZ,SAACZ,EAAD,CAAeb,KAAK,WACxB,SAAC,KAAD,CACIA,KAAK,WACL0B,KAAK,WACLD,YAAY,cAEZ,SAACX,EAAD,CAAmBd,KAAK,cACxB,mBAAQ0B,KAAK,SAAb,4BAKnB,E,UC3EQC,EAAO9B,EAAAA,GAAAA,KAAH,wKASJ+B,EAAkB/B,EAAAA,GAAAA,IAAH,iFCG5B,EAViB,WAEb,OACI,UAAC8B,EAAD,YACI,SAAC,EAAD,KACA,SAACC,EAAD,CAAiBC,IAAKN,EAAUO,IAAI,OAG/C,C","sources":["components/FormRegister/FormRegister.styled.jsx","components/FormRegister/FormRegister.jsx","pages/Register/Register.styled.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Form } from 'formik';\n\nexport const StyleForm = styled(Form) `\n    width: 400px;\n    display: flex;\n    gap:10px;\n    flex-direction: column;\n    align-items: center;\n    border-radius: 10px;\n    padding: 20px 0;\n\n    input {\n        width: 300px;\n        padding: 3px;\n        margin-bottom:20px;\n        font-size: 20px;\n        border: transparent;\n        border-bottom: 2px solid #716e6e;\n        outline: transparent;\n        background-color: #f0f0f7;\n    }\n\n    button {\n        width: 100px;\n        padding: 5px 0;\n        cursor: pointer;\n        border: 2px solid #716e6e;\n        background-color: transparent;\n        border-radius: 5px;\n\n        :hover, :focus {\n            background-color: #716e6e;\n            color: white;\n        }\n    }\n`","import { Formik, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\n\nimport { register } from 'redux/auth/operations';\nimport { StyleForm } from './FormRegister.styled';\n\nconst initialValues = {\n  name: '', email: '', password: ''\n}\n\nconst schema = yup.object().shape({\n    name: yup.string().matches(/(^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$)/).required(),\n    email: yup.string().email(),\n    password: yup.string().min(7).max(12),\n});\n\nconst FormErrorName = ({ name }) => {\n  return (\n    <ErrorMessage name={name} component='div'\n      render={() => <div>Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan</div>} />\n  )\n}\n\nconst FormErrorMail = ({ name }) => {\n  return (\n    <ErrorMessage name={name} component='div'\n      render={() => <div>Mail must be valid</div>} />\n  )\n}\n\nconst FormErrorPassword = ({ name }) => {\n  return (\n    <ErrorMessage name={name} component='div'\n      render={() => <div>Length password must be 7-12 symbols</div>} />\n  )\n}\n\nconst FormRegister = () => {\n  const dispatch = useDispatch();\n\n  const handlSubmit = (value, { resetForm }) => {\n    const { name, email, password } = value\n    const arrayContact = { name, email, password }\n    \n    console.log(arrayContact)\n    dispatch(\n      register(arrayContact)\n    );\n    resetForm()  \n  }\n\n        return (\n            <>\n                <Formik initialValues={initialValues} onSubmit={handlSubmit} validationSchema={schema}>\n                    <StyleForm>\n                    <Field  \n                        name=\"name\"\n                        placeholder=\"User name\"\n                    />\n                    <FormErrorName name=\"name\"/>\n                    <Field\n                        name=\"email\"\n                        placeholder=\"Mail\"\n                    />\n                        <FormErrorMail name=\"email\" />\n                    <Field\n                        name=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n                        <FormErrorPassword name=\"password\" />\n                        <button type='submit'>Register</button>\n                    </StyleForm>\n                </Formik>\n            </>\n        )\n    };\n\nexport default FormRegister;","import styled from 'styled-components';\n\nexport const Main = styled.main `\n    padding: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 10px;\n    background-color: #f0f0f7;\n`\n\nexport const FormRegisterImg = styled.img `\n    /* margin-left: auto;\n    margin-right: auto; */\n\n`","import FormRegister from '../../components/FormRegister/FormRegister';\nimport register from '../../image/register.png';\nimport { Main, FormRegisterImg } from './Register.styled';\n\nconst Register = () => {\n\n    return (\n        <Main>\n            <FormRegister />\n            <FormRegisterImg src={register} alt=\"\" />\n        </Main>\n    )\n};\n\nexport default Register;"],"names":["StyleForm","styled","Form","initialValues","name","email","password","schema","yup","shape","matches","required","min","max","FormErrorName","component","render","FormErrorMail","FormErrorPassword","dispatch","useDispatch","onSubmit","value","resetForm","arrayContact","console","log","register","validationSchema","placeholder","type","Main","FormRegisterImg","src","alt"],"sourceRoot":""}